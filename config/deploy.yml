# Name of your application. Used to uniquely configure containers.
service: shinonome

# Name of the container image.
image: takahashim/shinonome

# Deploy to these servers.
servers:
  web:
    hosts:
      - <%= ENV['PRIMARY_HOST'] %>
    labels:
      traefik.http.routers.web.rule: Host(`reception.aozora-renewal.cloud`)
      traefik.http.routers.web_secure.entrypoints: websecure
      traefik.http.routers.web_secure.rule: Host(`reception.aozora-renewal.cloud`)
      traefik.http.routers.web_secure.tls: true
      traefik.http.routers.web_secure.tls.certresolver: myresolver
      traefik.http.routers.dashboard.service: api@internal
      traefik.http.routers.dashboard.rule: Host(`traefik.aozora-renewal.cloud`)
      traefik.http.routers.dashboard.entrypoints: websecure
      traefik.http.routers.dashboard.tls: true
      traefik.http.routers.dashboard.tls.certresolver: myresolver

# Credentials for your image host.
registry:
  username: takahashim
  password:
    - MRSK_REGISTRY_PASSWORD

env:
  clear:
    DATABASE_NAME: shinonome_production
    RAILS_LOG_TO_STDOUT: '1'
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_HOST
    - DATABASE_USER
    - DATABASE_PASS
    - SENDGRID_API_KEY
    - SKYLIGHT_AUTHENTICATION
    - MAIN_SITE_URL
    - SITE_NAME
    - RECEPTION_EMAIL
    - RAILS_ADMIN_PATH

volumes:
  - "/mnt/storage/str:/myapp/storage"

builder:
  dockerfile: Dockerfile.production
  remote:
    arch: amd64
    host: <%= ENV['BUILDER_HOST'] %>
  cache:
    type: registry

# Configure custom arguments for Traefik
#
# Before deploy, create acme.json file on host:
#   mkdir -p /letsencrypt && touch /letsencrypt/acme.json && chmod 600 /letsencrypt/acme.json
traefik:
  args:
    accesslog: true
    accesslog.format: json
    api.insecure: false
    api.dashboard: true
    entrypoints.web.address: ":80"
    entrypoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesresolvers.myresolver.acme.email: 'takahashimm@gmail.com'
    certificatesresolvers.myresolver.acme.storage: '/letsencrypt/acme.json'
    certificatesresolvers.myresolver.acme.httpchallenge: true
    certificatesresolvers.myresolver.acme.httpchallenge.entrypoint: web
#    certificatesresolvers.myresolver.acme.caserver: 'https://acme-staging-v02.api.letsencrypt.org/directory'
  options:
    publish:
      - 443:443
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
healthcheck:
  max_attempts: 20
  interval: 30s
