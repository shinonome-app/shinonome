# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby Test

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  test:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1.2
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Cache node modules
      uses: actions/cache@v2.1.4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: yarn install
      run:  yarn install --check-files
    - name: migration
      run: |
        bundle exec rails db:create
        bundle exec rails db:test:prepare
      env:
        RAILS_ENV: test
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_HOST: localhost
    - name: yarn build
      run:  yarn build
    - name: Run rspec
      run: |
        bundle exec rspec
        bundle exec rspec --only-failures
      env:
        RAILS_ENV: test
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_HOST: localhost
